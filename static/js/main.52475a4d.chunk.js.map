{"version":3,"sources":["utils/functions.ts","components/atoms/Button/index.tsx","components/atoms/Icon/index.tsx","components/atoms/Input/index.tsx","components/atoms/Social/index.tsx","components/templates/ModalLogin/index.tsx","store/exampleReducer.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["mapModifiers","baseClassName","modifiers","reduce","acc","m","map","classNames","suffix","Button","name","type","disabled","theme","transform","children","handleClick","className","onClick","defaultProps","Icon","iconName","Input","id","value","placeholder","defaultValue","handleChange","handleFocus","readonly","handleBlur","error","icon","hidden","readOnly","onChange","e","onFocus","onBlur","Social","ModalLogin","opened","handleClose","isOpen","contentLabel","delay","a","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","amount","exampleSlice","createSlice","initialState","reducers","increment","$state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","fulfilled","actions","store","configureStore","devTools","process","reducer","exampleReducer","createSelectorHook","App","useState","setOpened","AppWrapper","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52475a4d.chunk.js","sourcesContent":["function mapModifiers(\n  baseClassName: string,\n  ...modifiers: (string | string[] | false | undefined)[]\n): string {\n  return modifiers\n    .reduce<string[]>(\n      (acc, m) => (!m ? acc : [...acc, ...(typeof m === \"string\" ? [m] : m)]),\n      [],\n    )\n    .map((m) => `-${m}`)\n    .reduce<string>(\n      (classNames, suffix) => `${classNames} ${baseClassName}${suffix}`,\n      baseClassName,\n    );\n}\n\nexport default mapModifiers;\n","import React from \"react\";\n\nimport mapModifiers from \"utils/functions\";\n\ninterface ButtonProps {\n  name?: string;\n  type?: \"button\" | \"submit\",\n  theme?: \"primary\" | \"secondary\" | \"gradient\" | \"text\";\n  transform?: \"uppercase\" | \"capitalize\" | \"lowercase\";\n  disabled?: boolean;\n  handleClick?: () => void\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  name,\n  type,\n  disabled,\n  theme,\n  transform,\n  children,\n  handleClick,\n}) => (\n  <button\n    type={type}\n    className={mapModifiers(\n      \"a-button\",\n      theme,\n      transform,\n    )}\n    name={name}\n    disabled={disabled}\n    onClick={handleClick}\n  >\n    {children}\n  </button>\n);\n\nButton.defaultProps = {\n  type: \"button\",\n  theme: \"primary\",\n  transform: \"uppercase\",\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport mapModifiers from \"utils/functions\";\n\nexport const iconList = {\n  google: \"google\",\n  facebook: \"facebook\",\n  twitter: \"twitter\",\n  telegram: \"telegram\",\n  phoneSocial: \"phoneSocial\",\n  mail: \"mail\",\n  loginHead: \"loginHead\",\n  close: \"close\",\n  password: \"password\",\n};\n\nexport type IconName = keyof typeof iconList\n\ninterface IconProps {\n  iconName: IconName;\n}\n\nconst Icon: React.FC<IconProps> = ({ iconName }) => <div className={mapModifiers(\"a-icon\", iconName)} />;\n\nexport default Icon;\n","import React, { ChangeEvent } from \"react\";\n\nimport Icon, { IconName } from \"../Icon\";\n\nimport mapModifiers from \"utils/functions\";\n\ninterface InputProps {\n  type: string;\n  id?: string;\n  name?: string;\n  value?: string | number;\n  placeholder?: string;\n  disabled?: boolean;\n  readonly?: boolean;\n  error?: boolean;\n  success?: boolean;\n  defaultValue?: string;\n  hidden?: boolean;\n  icon?: IconName;\n  handleChange?: (e: ChangeEvent<HTMLInputElement>) => void;\n  handleFocus?: (e: ChangeEvent<HTMLInputElement>) => void;\n  handleBlur?: (e: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Input: React.FC<InputProps> = ({\n  type,\n  id,\n  name,\n  value,\n  placeholder,\n  disabled,\n  defaultValue,\n  handleChange,\n  handleFocus,\n  readonly,\n  handleBlur,\n  error,\n  icon,\n  hidden,\n}) => (\n  <div className={mapModifiers(\"a-input\", error && \"error\")}>\n    {icon && <Icon iconName={icon} />}\n    <input\n      type={type}\n      disabled={disabled}\n      name={name}\n      id={id}\n      readOnly={readonly}\n      hidden={hidden}\n      defaultValue={defaultValue}\n      value={value}\n      placeholder={placeholder}\n      onChange={(e): void => handleChange && handleChange(e)}\n      onFocus={(e): void => handleFocus && handleFocus(e)}\n      onBlur={(e): void => handleBlur && handleBlur(e)}\n    />\n  </div>\n);\n\nexport default Input;\n","import React from \"react\";\n\nimport Icon, { IconName } from \"../Icon\";\n\ninterface SocialProps {\n  type: IconName;\n}\n\nconst Social: React.FC<SocialProps> = ({ type }) => (\n  <div className=\"a-social\"><Icon iconName={type} /></div>\n);\n\nexport default Social;\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\n\nimport Button from \"components/atoms/Button\";\nimport Icon from \"components/atoms/Icon\";\nimport Input from \"components/atoms/Input\";\nimport Social from \"components/atoms/Social\";\n\ninterface ModalLoginProps {\n  opened: boolean;\n  handleClose?: () => void;\n}\n\nconst ModalLogin: React.FC<ModalLoginProps> = ({ opened, handleClose }) => (\n  <ReactModal\n    className=\"t-modalLogin\"\n    isOpen={opened}\n    contentLabel=\"LOGIN\"\n  >\n    <div className=\"t-modalLogin_header\">\n      <Icon iconName=\"loginHead\" />\n      <h2 className=\"t-modalLogin_title\">Login/Register Now</h2>\n      <button className=\"t-modalLogin_close\" onClick={handleClose}><Icon iconName=\"close\" /></button>\n    </div>\n    <div className=\"t-modalLogin_body\">\n      <p className=\"t-modalLogin_text t-modalLogin_text-white\">Select the login most convenient for you</p>\n      <div className=\"t-modalLogin_btnConnect\">\n        <Button theme=\"gradient\">Connect Dapp Wallet</Button>\n      </div>\n      <p className=\"t-modalLogin_text mt-14\">or</p>\n      <form className=\"t-modalLogin_form\">\n        <Input type=\"email\" icon=\"mail\" placeholder=\"EMAIL\" />\n        <Input type=\"password\" icon=\"password\" placeholder=\"PASSWORD\" />\n        <Button>Login</Button>\n      </form>\n      <p className=\"t-modalLogin_text mt-24\">or social media</p>\n      <div className=\"t-modalLogin_socials\">\n        <Social type=\"google\" />\n        <Social type=\"facebook\" />\n        <Social type=\"twitter\" />\n        <Social type=\"telegram\" />\n        <Social type=\"phoneSocial\" />\n      </div>\n      <p className=\"t-modalLogin_text t-modalLogin_text-white mt-32\">Don’t have an account?</p>\n      <div className=\"t-modalLogin_btnCreate\"><Button>Create new account</Button></div>\n      <div className=\"t-modalLogin_btnSkip\"><Button theme=\"text\">skip</Button></div>\n    </div>\n  </ReactModal>\n);\n\nexport default ModalLogin;\n","import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface ExampleState {\n  value: number;\n}\n\nconst initialState: ExampleState = {\n  value: 0,\n};\nconst delay = async () => new Promise((resolve) => setTimeout(\n  () => { resolve(true); },\n  2000,\n));\n\nexport const incrementAsync = createAsyncThunk(\"exampleReducer/example\", async (amount: number) => {\n  await delay();\n  return amount;\n});\n\nexport const exampleSlice = createSlice({\n  name: \"exampleReducer\",\n  initialState,\n  reducers: {\n    increment($state) {\n      $state.value += 1;\n    },\n    decrement($state) {\n      $state.value -= 1;\n    },\n    incrementByAmount($state, action: PayloadAction<number>) {\n      $state.value += action.payload;\n    },\n  },\n  extraReducers(builder) {\n    builder.addCase(incrementAsync.fulfilled, ($state, action) => {\n      $state.value += action.payload;\n    });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = exampleSlice.actions;\n\nexport default exampleSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createSelectorHook, useDispatch } from \"react-redux\";\n\nimport exampleReducer from \"./exampleReducer\";\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV === \"development\",\n  reducer: {\n    exampleReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport const useAppSelector = createSelectorHook<RootState>();\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default store;\n","import React, { useState } from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport \"./App.scss\";\nimport Button from \"components/atoms/Button\";\nimport ModalLogin from \"components/templates/ModalLogin\";\nimport store from \"store\";\n\nconst App:React.FC = () => {\n  const [opened, setOpened] = useState(false);\n  return (\n    <div className=\"App\">\n      <Button handleClick={() => setOpened(true)}>Login</Button>\n      <ModalLogin opened={opened} handleClose={() => setOpened(false)} />\n    </div>\n  );\n};\n\nconst AppWrapper:React.FC = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nexport default AppWrapper;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.scss\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport AppWrapper from \"App\";\nimport reportWebVitals from \"reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}